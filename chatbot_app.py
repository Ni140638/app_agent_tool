import streamlit as st
import openai

openai.api_key = st.secrets["OPENAI_API_KEY"]

# ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° state ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
if "selected_topic" not in st.session_state:
    st.session_state["selected_topic"] = None
if "input_topic" not in st.session_state:
    st.session_state["input_topic"] = ""

for i in range(1, 4):
    if f"messages_bot{i}" not in st.session_state:
        st.session_state[f"messages_bot{i}"] = []
    if f"input_bot{i}" not in st.session_state:
        st.session_state[f"input_bot{i}"] = ""

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å OpenAI

def ask_openai(messages, system_prompt):
    full_messages = [{"role": "system", "content": system_prompt}] + messages
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=full_messages
    )
    return response.choices[0].message["content"]

# -------------------------------
# STEP 1: ‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ñ‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£
# -------------------------------
if st.session_state["selected_topic"] is None:
    st.chat_message("assistant").markdown(
        "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ üòä ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£?\n\n"
        "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà: `Asset Allocation`, `Motor Insurance`, ‡∏´‡∏£‡∏∑‡∏≠ `Credit card` ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤ `‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠` ‡∏Ñ‡πà‡∏∞\n\n"
    )

    with st.form(key="topic_form"):
        st.session_state["input_topic"] = st.text_input("‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢...")
        submitted = st.form_submit_button("‡∏™‡πà‡∏á")

    if submitted:
        topic = st.session_state["input_topic"].strip().lower()
        if topic in ["asset allocation", "asset","Asset Allocation"]:
            st.session_state["selected_topic"] = "asset"
        elif topic in ["motor insurance", "motor",'Motor Insurance']:
            st.session_state["selected_topic"] = "motor"
        elif topic in ["credit card", "credit",'Credit card']:
            st.session_state["selected_topic"] = "credit"
        else:
            st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞ asset allocation, motor insurance, ‡∏´‡∏£‡∏∑‡∏≠ credit card ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞")

# -------------------------------
# STEP 2: ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏ï‡∏≤‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
# -------------------------------
if st.session_state["selected_topic"] == "asset":
    tabs = st.tabs(["\U0001F4B5 Asset Allocation"])
    with tabs[0]:
        st.subheader("üíµ Asset Allocation")

        col1, col2, col3 = st.columns(3)
        if col1.button("üìå ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó ‡∏ß‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£", key="btn1a"):
            st.session_state["input_bot1"] = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó ‡∏ß‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£"
        if col2.button("üìå ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏á‡∏≠‡∏Å‡πÄ‡∏á‡∏¢", key="btn1b"):
            st.session_state["input_bot1"] = "‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏á‡∏≠‡∏Å‡πÄ‡∏á‡∏¢"
        if col3.button("üìå ‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå Portfolio ‡πÅ‡∏•‡∏∞ Matual Fund ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£", key="btn1c"):
            st.session_state["input_bot1"] = "‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå Portfolio ‡πÅ‡∏•‡∏∞ Matual Fund ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£"

        for msg in st.session_state["messages_bot1"]:
            with st.chat_message(msg["role"]):
                st.markdown(msg["content"])

        with st.form(key="form1"):
            cols = st.columns([10, 1])
            with cols[0]:
                st.session_state["input_bot1"] = st.text_input(
                    "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...",
                    value=st.session_state["input_bot1"],
                    key="input1",
                    label_visibility="collapsed",
                    placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°..."
                )
            with cols[1]:
                submitted = st.form_submit_button("‚û§")

        if submitted and st.session_state["input_bot1"]:
            prompt = st.session_state["input_bot1"].strip()
            if prompt == "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠":
                st.chat_message("assistant").markdown("‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞ ‚ú®")
                st.session_state["selected_topic"] = None
                st.rerun()  # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà experimental_rerun()
            else:
                st.session_state["messages_bot1"].append({"role": "user", "content": prompt})
                with st.chat_message("user"):
                    st.markdown(prompt)
                reply = ask_openai(st.session_state["messages_bot1"], "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ AI ‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
                st.chat_message("assistant").markdown(reply)
                st.session_state["messages_bot1"].append({"role": "assistant", "content": reply})
                st.session_state["input_bot1"] = ""

elif st.session_state["selected_topic"] == "motor":
    tabs = st.tabs(["\U0001F697 Motor Insurance"])
    with tabs[0]:
        st.subheader("üöó Motor Insurance")

        col1, col2, col3 = st.columns(3)
        if col1.button("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ(‡∏õ‡∏µ/model/‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠)", key="btn2a"):
            st.session_state["input_bot2"] = "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ(‡∏õ‡∏µ/model/‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠)"
        if col2.button("üìå VMI ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£", key="btn2b"):
            st.session_state["input_bot2"] = "VMI ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£"
        if col3.button("üìå ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ", key="btn2c"):
            st.session_state["input_bot2"] = "‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ"

        for msg in st.session_state["messages_bot2"]:
            with st.chat_message(msg["role"]):
                st.markdown(msg["content"])

        with st.form(key="form2"):
            cols = st.columns([10, 1])
            with cols[0]:
                st.session_state["input_bot2"] = st.text_input(
                    "‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...",
                    value=st.session_state["input_bot2"],
                    key="input2",
                    label_visibility="collapsed",
                    placeholder="‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°..."
                )
            with cols[1]:
                submitted = st.form_submit_button("‚û§")

        if submitted and st.session_state["input_bot2"]:
            prompt = st.session_state["input_bot2"].strip()
            if prompt == "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠":
                st.chat_message("assistant").markdown("‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ üòä")
                st.session_state["selected_topic"] = None
                st.rerun()  # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà experimental_rerun()
            else:
                st.session_state["messages_bot2"].append({"role": "user", "content": prompt})
                with st.chat_message("user"):
                    st.markdown(prompt)
                reply = ask_openai(st.session_state["messages_bot2"], "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏î‡πâ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå")
                st.chat_message("assistant").markdown(reply)
                st.session_state["messages_bot2"].append({"role": "assistant", "content": reply})
                st.session_state["input_bot2"] = ""

elif st.session_state["selected_topic"] == "credit":
    tabs = st.tabs(["\U0001F4B3 Credit Card"])
    with tabs[0]:
        st.subheader("üí≥ Credit Card")

        col1, col2, col3 = st.columns(3)
        if col1.button("üìå ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏´‡∏ô status ‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£", key="btn3a"):
            st.session_state["input_bot3"] = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏´‡∏ô status ‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£"
        if col2.button("üìå ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ Lifestyle ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£", key="btn3b"):
            st.session_state["input_bot3"] = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ Lifestyle ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£"
        if col3.button("üìå Promotion/Privilage ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", key="btn3c"):
            st.session_state["input_bot3"] = "Promotion/Privilage ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"

        for msg in st.session_state["messages_bot3"]:
            with st.chat_message(msg["role"]):
                st.markdown(msg["content"])

        with st.form(key="form3"):
            cols = st.columns([10, 1])
            with cols[0]:
                st.session_state["input_bot3"] = st.text_input(
                    "‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...",
                    value=st.session_state["input_bot3"],
                    key="input3",
                    label_visibility="collapsed",
                    placeholder="‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°..."
                )
            with cols[1]:
                submitted = st.form_submit_button("‚û§")

        if submitted and st.session_state["input_bot3"]:
            prompt = st.session_state["input_bot3"].strip()
            if prompt == "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠":
                st.chat_message("assistant").markdown("‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠ üíÅ‚Äç‚ôÄÔ∏è")
                st.session_state["selected_topic"] = None
                st.rerun()  # ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà experimental_rerun()
            else:
                st.session_state["messages_bot3"].append({"role": "user", "content": prompt})
                with st.chat_message("user"):
                    st.markdown(prompt)
                reply = ask_openai(st.session_state["messages_bot3"], "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î")
                st.chat_message("assistant").markdown(reply)
                st.session_state["messages_bot3"].append({"role": "assistant", "content": reply})
                st.session_state["input_bot3"] = ""

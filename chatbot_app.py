import streamlit as st
import openai

openai.api_key = st.secrets["OPENAI_API_KEY"]

# -------------------------------
# ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° state
# -------------------------------
tabs = st.tabs(["üíµ Asset Allocation", "üöó Motor Insurance", "üí≥ Credit Card"])

for i in range(1, 4):
    st.session_state.setdefault(f"messages_bot{i}", [])
    st.session_state.setdefault(f"input{i}", "")

# -------------------------------
# ‡πÇ‡∏´‡∏•‡∏î system prompt
# -------------------------------
with open("genai-mf-prompt-for-first-draft.txt", "r", encoding="utf-8") as f:
    prompt_mf = f.read()
with open("gen-ai-motor-first-draft.txt", "r", encoding="utf-8") as f:
    prompt_motor = f.read()
prompt_credit = "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î"

# -------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å OpenAI
# -------------------------------
def ask_openai(messages, system_prompt, max_history=10):
    full_messages = [{"role": "system", "content": system_prompt}] + messages[-max_history:]
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=full_messages
        )
        return response.choices[0].message["content"]
    except Exception as e:
        return f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}"

# -------------------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏≠‡∏ó‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ó‡πá‡∏ö
# -------------------------------
def chat_tab(tab, bot_index, preset_buttons, system_prompt):
    with tab:
        st.subheader(preset_buttons["title"])

        # ‡∏õ‡∏∏‡πà‡∏° preset
        col1, col2, col3 = st.columns(3)
        for i, (col, text) in enumerate(preset_buttons["items"]):
            if col.button(f"üìå {text}", key=f"btn{bot_index}_{i}"):
                st.session_state[f"input{bot_index}"] = text

        # ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤
        for msg in st.session_state[f"messages_bot{bot_index}"]:
            with st.chat_message(msg["role"]):
                st.markdown(msg["content"])

        # ‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á
        cols = st.columns([10, 1])
        with cols[0]:
            user_input = st.text_input(
                "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...",
                key=f"input{bot_index}",
                label_visibility="collapsed",
                placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°..."
            )
        with cols[1]:
            send_clicked = st.button("‚û§", key=f"send_btn{bot_index}")

        # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏™‡πà‡∏á
        if send_clicked and user_input.strip():
            prompt = user_input.strip()
            st.session_state[f"messages_bot{bot_index}"].append({"role": "user", "content": prompt})
            with st.chat_message("user"):
                st.markdown(prompt)
            reply = ask_openai(st.session_state[f"messages_bot{bot_index}"], system_prompt)
            st.chat_message("assistant").markdown(reply)
            st.session_state[f"messages_bot{bot_index}"].append({"role": "assistant", "content": reply})
            st.session_state[f"input{bot_index}"] = ""  # ‡∏•‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á

# -------------------------------
# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ó‡πá‡∏ö
# -------------------------------
chat_tab(
    tabs[0], 1,
    preset_buttons={
        "title": "üíµ Asset Allocation",
        "items": [
            ("‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó ‡∏ß‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£"),
            ("‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏á‡∏≠‡∏Å‡πÄ‡∏á‡∏¢"),
            ("‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå Portfolio ‡πÅ‡∏•‡∏∞ Matual Fund ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£")
        ]
    },
    system_prompt=prompt_mf
)

chat_tab(
    tabs[1], 2,
    preset_buttons={
        "title": "üöó Motor Insurance",
        "items": [
            ("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ(‡∏õ‡∏µ/model/‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠)"),
            ("VMI ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£"),
            ("‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ")
        ]
    },
    system_prompt=prompt_motor
)

chat_tab(
    tabs[2], 3,
    preset_buttons={
        "title": "üí≥ Credit Card",
        "items": [
            ("‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏´‡∏ô status ‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£"),
            ("‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ Lifestyle ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£"),
            ("Promotion/Privilage ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤")
        ]
    },
    system_prompt=prompt_credit
)

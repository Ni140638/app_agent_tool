import streamlit as st
import openai

openai.api_key = "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"

import streamlit as st
import openai

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö
tabs = st.tabs(["üíµ Asset Allocation", "üöó Motor Insurance", "üí≥ Credit Card"])

# ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ä‡∏ó ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° input
for i in range(1, 4):
    if f"messages_bot{i}" not in st.session_state:
        st.session_state[f"messages_bot{i}"] = []
    if f"input_bot{i}" not in st.session_state:
        st.session_state[f"input_bot{i}"] = ""

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å OpenAI
def ask_openai(messages, system_prompt):
    full_messages = [{"role": "system", "content": system_prompt}] + messages
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=full_messages
    )
    return response.choices[0].message["content"]

# üíµ Tab 1 ‚Äì Asset Allocation
with tabs[0]:
    st.subheader("üíµ Asset Allocation")

    col1, col2, col3 = st.columns(3)
    if col1.button("üìå ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó ‡∏ß‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£", key="btn1a"):
        st.session_state["input_bot1"] = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó ‡∏ß‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£"
    if col2.button("üìå ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏á‡∏≠‡∏Å‡πÄ‡∏á‡∏¢", key="btn1b"):
        st.session_state["input_bot1"] = "‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏¢‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡∏á‡∏≠‡∏Å‡πÄ‡∏á‡∏¢"
    if col3.button("üìå ‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå Portfolio ‡πÅ‡∏•‡∏∞ Matual Fund ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£", key="btn1c"):
        st.session_state["input_bot1"] = "‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå Portfolio ‡πÅ‡∏•‡∏∞ Matual Fund ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£"

    for msg in st.session_state["messages_bot1"]:
        with st.chat_message(msg["role"]):
            st.markdown(msg["content"])

    with st.form(key="form1"):
        cols = st.columns([10, 1])
        with cols[0]:
            st.session_state["input_bot1"] = st.text_input(
                "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...",
                value=st.session_state["input_bot1"],
                key="input1",
                label_visibility="collapsed",
                placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°..."
            )
        with cols[1]:
            submitted = st.form_submit_button("‚û§")

    if submitted and st.session_state["input_bot1"]:
        prompt = st.session_state["input_bot1"]
        st.session_state["messages_bot1"].append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)
        reply = ask_openai(st.session_state["messages_bot1"], "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ AI ‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
        st.chat_message("assistant").markdown(reply)
        st.session_state["messages_bot1"].append({"role": "assistant", "content": reply})
        st.session_state["input_bot1"] = ""

# üöó Tab 2 ‚Äì Motor Insurance
with tabs[1]:
    st.subheader("üöó Motor Insurance")

    col1, col2, col3 = st.columns(3)
    if col1.button("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ(‡∏õ‡∏µ/model/‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠)", key="btn2a"):
        st.session_state["input_bot2"] = "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ(‡∏õ‡∏µ/model/‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠)"
    if col2.button("üìå VMI ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏∞‡πÑ‡∏£", key="btn2b"):
        st.session_state["input_bot2"] = "VMI ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏∞‡πÑ‡∏£"
    if col3.button("üìå ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ", key="btn2c"):
        st.session_state["input_bot2"] = "‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ"

    for msg in st.session_state["messages_bot2"]:
        with st.chat_message(msg["role"]):
            st.markdown(msg["content"])

    with st.form(key="form2"):
        cols = st.columns([10, 1])
        with cols[0]:
            st.session_state["input_bot2"] = st.text_input(
                "‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...",
                value=st.session_state["input_bot2"],
                key="input2",
                label_visibility="collapsed",
                placeholder="‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°..."
            )
        with cols[1]:
            submitted = st.form_submit_button("‚û§")

    if submitted and st.session_state["input_bot2"]:
        prompt = st.session_state["input_bot2"]
        st.session_state["messages_bot2"].append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)
        reply = ask_openai(st.session_state["messages_bot2"], "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏î‡πâ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå")
        st.chat_message("assistant").markdown(reply)
        st.session_state["messages_bot2"].append({"role": "assistant", "content": reply})
        st.session_state["input_bot2"] = ""

# üí≥ Tab 3 ‚Äì Credit Card
with tabs[2]:
    st.subheader("üí≥ Credit Card")

    col1, col2, col3 = st.columns(3)
    if col1.button("üìå ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏´‡∏ô status ‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£", key="btn3a"):
        st.session_state["input_bot3"] = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏´‡∏ô status ‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£"
    if col2.button("üìå ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ Lifestyle ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£", key="btn3b"):
        st.session_state["input_bot3"] = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏µ Lifestyle ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£"
    if col3.button("üìå Promotion/Privilage ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", key="btn3c"):
        st.session_state["input_bot3"] = "Promotion/Privilage ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"

    for msg in st.session_state["messages_bot3"]:
        with st.chat_message(msg["role"]):
            st.markdown(msg["content"])

    with st.form(key="form3"):
        cols = st.columns([10, 1])
        with cols[0]:
            st.session_state["input_bot3"] = st.text_input(
                "‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°...",
                value=st.session_state["input_bot3"],
                key="input3",
                label_visibility="collapsed",
                placeholder="‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°..."
            )
        with cols[1]:
            submitted = st.form_submit_button("‚û§")

    if submitted and st.session_state["input_bot3"]:
        prompt = st.session_state["input_bot3"]
        st.session_state["messages_bot3"].append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)
        reply = ask_openai(st.session_state["messages_bot3"], "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡∏∏‡∏õ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î")
        st.chat_message("assistant").markdown(reply)
        st.session_state["messages_bot3"].append({"role": "assistant", "content": reply})
        st.session_state["input_bot3"] = ""
